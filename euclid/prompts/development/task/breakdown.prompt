You are working on a web app called Euclid and you need to write code for the entire application based on the tasks that the tech lead gives you. So that you understand better what you're working on, you're given other specs for Euclid as well.

Here is a high level description of Euclid:
```
{{ app_summary }}
```
{#
Here are some additional questions and answers to clarify the apps description:
```
{% for clarification in clarifications %}
Q: {{ clarification.question }}
A: {{ clarification.answer }}
{% endfor %}
```
#}
Here are user stories that specify how users use Euclid:
```{% for story in user_stories %}
- {{ story }}{% endfor %}
```

Here are user tasks that specify what users need to do to interact with Euclid:
```{% for task in user_tasks %}
- {{ task }}{% endfor %}
```

Here are the technologies that you need to use for this project:
```{% for tech in technologies %}
- {{ tech }}{% endfor %}
```

{% if parent_task %}
You are currently working on this task:
```
{{ array_of_objects_to_string(parent_task) }}
```
We've broken it down to these subtasks:
```{% for subtask in sibling_tasks %}
- {{ subtask['description'] }}{% endfor %}
```
{% endif %}

{% if current_task_index != 0 %}
So far, these tasks are done:
```
{% for task in sibling_tasks[0:current_task_index] %}
#{{ loop.index }} {{ task['description'] }}
{% endfor %}
```
so let's the next task which is this:
{% else %}
Let's start with the task #0:
{% endif %}
```
{{ array_of_objects_to_string(sibling_tasks[current_task_index]) }}
```

Think step by step about what needs to be done to complete this task. 
{% if sibling_tasks[current_task_index]['type'] == 'COMMAND' %}
Respond with all commands that need to be run to fulfill this step.
{% elif sibling_tasks[current_task_index]['type'] == 'CODE_CHANGE' %}
First, you need to know the code that's currently written so that you can appropriately write new or update the existing code. Here are all the file that are written so far in a file tree format:
```
{{ directory_tree }}
```

You can get the list of files by calling `get_files` function. 
{% else %}


First, just make a list of steps we need to do to fulfill this task. It should be in a JSON array. Every step must NOT contain both a command that needs to be run and the code that needs to be changed. It can be either command (or multiple commands) that need to be run or a change in the code. Each step must start with a keyword `command` in case the step consists of commands that need to be run or `code_change` in case it consists of changes in the code. After the keyword, write a description of what will be done in that step. Do not write what needs to be done for each step but only list them in an array. Also, keep in mind that you also need to write test (or tests) that will programmatically verify that your task is complete.

{% endif %}